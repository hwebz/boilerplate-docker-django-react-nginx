###########
# BUILDER #
###########

# pull official base image
FROM python:3.8.3-alpine as builder

# Set working directory
WORKDIR /usr/src/server

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# install psycopg2 dependencies
RUN apk update \
    && apk add postgresql-dev gcc python3-dev musl-dev

# Lint
RUN pip install --upgrade pip
RUN pip install flake8
COPY . .
RUN flake8 --ignore=E501,F401 .

# Install dependencies
COPY ./requirements.txt .
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/server/wheels -r requirements.txt

###########
# FINAL #
###########

# Pull official base image
FROM python:3.8.3-alpine

# Create directory for app user
RUN mkdir -p /home/app

# Create the server user
RUN addgroup -S server && adduser -S server -G server

# Create the appropriate directories
ENV HOME=/home/app
ENV APP_HOME=/home/app/server
RUN mkdir $APP_HOME
RUN mkdir $APP_HOME/staticfiles
RUN mkdir $APP_HOME/mediafiles
WORKDIR $APP_HOME

# Install dependencies
RUN apk update & apk add libpq
COPY --from=builder /usr/src/server/wheels /wheels
COPY --from=builder /usr/src/server/requirements.txt .
RUN pip install --no-cache /wheels/*

# Copy entrypoin.prod.sh
COPY ./entrypoint.prod.sh $APP_HOME

# Copy project
COPY . $APP_HOME

# Chown all the files to the server user
RUN chown -R server:server $APP_HOME

# Change to the server user
USER server

# Run entrypoint.prod.sh
ENTRYPOINT [ "/home/app/server/entrypoint.prod.sh" ]